@snippet generate(class)
  /*
   * BEFORE RUNNING:
   * ---------------
   * 1. If not already done, enable the {@class.apiInfo.title}
   *    and check the quota for your project at
   *    https://console.developers.google.com/apis/api/{@class.apiInfo.name}
   @switch class.apiInfo.authType
   @case "ADC"
     * 2. This sample uses Application Default Credentials for authentication.
     *    If not already done, install the gcloud CLI from
     *    https://cloud.google.com/sdk and run
     *    `gcloud beta auth application-default login`.
     *    For more information, see
     *    https://developers.google.com/identity/protocols/application-default-credentials
     * 3. Install the Java client library on Maven or Gradle. Check installation
     *    instructions at https://github.com/google/google-api-java-client.
     *    On other build systems, you can add the jar files to your project from
     *    https://developers.google.com/resources/api-libraries/download/{@class.apiInfo.name}/{@class.apiInfo.name}/java
   @default
     * 2. Install the Java client library on Maven or Gradle. Check installation
     *    instructions at https://github.com/google/google-api-java-client.
     *    On other build systems, you can add the jar files to your project from
     *    https://developers.google.com/resources/api-libraries/download/{@class.apiInfo.name}/{@class.apiInfo.version}/java
   @end
   */

   public class {@class.sampleClassName} {
     {@mainFunc(class)}
   }
@end

@private mainFunc(class)
  public static void main(String args[]) throws IOException, GeneralSecurityException {
    @join parameter : class.parameters if class.parameters

      {@field(parameter, "", TRUE)}
    @end
  }
@end

@private field(class, httpVerb, printTodo)
    @if class.fields
        @join subField : class.fields
            {@field(subField, "", TRUE)}

        @end


    @end
    # Do not print documentation for the request body.
    @if httpVerb == ""
        @if class.description
            @join line : util.getDocLines(class.description, 100)
                // {@line}
            @end


        @end
    @end
    @if class.isArray
        List<{@class.typeName}> {@class.varName} = new List<{@class.typeName}>();  // TODO: Update placeholder value.
    @else
        # If `class` is the request body...
        @if httpVerb
            @switch httpVerb
            @case "PATCH"
                // TODO: Assign values to desired properties of `{@class.varName}`. Only assigned
                // properties will be changed:
            @case "PUT"
                // TODO: Assign values to desired properties of `{@class.varName}`. All existing
                // properties will be replaced:
            @default
                // TODO: Assign values to desired properties of `{@class.varName}`:
            @end


        @end
        @if printTodo
            {@class.typeName} {@class.varName} = {@class.value};  // TODO: Update placeholder value.
        @else
            {@class.typeName} {@class.varName} = {@class.value};
        @end
    @end

    @join subField : class.fields if class.fields
        @if class.isArray
            {@class.varName}.add({@subField.varName})
        @else
            @if class.isMap
                {@class.varName}.add({@subField.keyValue}, {@subField.value})
            @else
                {@class.varName}.{@subField.classPropertyName} = {@subField.varName};
            @end
        @end
    @end
@end
